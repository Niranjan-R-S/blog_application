/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package blog_application;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.CrossOrigin;
import java.util.*;
import springfox.documentation.swagger2.annotations.EnableSwagger2;
import io.swagger.annotations.ApiOperation;

@SpringBootApplication
@RestController
@CrossOrigin
@EnableSwagger2
public class App {
    public String getGreeting() {
        return "Hello world.";
    }

    @ApiOperation(value = "", nickname = "getAllBlogsAndComments")
    @RequestMapping(value="/get_all_blogs_and_comments", method=RequestMethod.GET, produces="application/json")
    public HashMap<String, Object> getAllBlogsAndComments(){
      HashMap<String, Object> finalMap = new HashMap<>();
      return finalMap;
    }


    @ApiOperation(value = "", nickname = "getAllCommentsForParticularBlog")
    @RequestMapping(value="/get_all_comments_for_particular_blog", method=RequestMethod.POST, produces="application/json")
    public HashMap<String, Object> getAllCommentsForParticularBlog(@RequestBody HashMap<String, Object> payload){
      HashMap<String, Object> finalMap = new HashMap<>();
      return finalMap;
    }


    @ApiOperation(value = "", nickname = "addNewComment")
    @RequestMapping(value="/add_new_comment", method=RequestMethod.POST, produces="application/json")
    public HashMap<String, Object> addNewComment(@RequestBody HashMap<String, Object> payload){
      HashMap<String, Object> finalMap = new HashMap<>();
      return finalMap;
    }


    @ApiOperation(value = "", nickname = "editComment")
    @RequestMapping(value="/edit_comment", method=RequestMethod.POST, produces="application/json")
    public HashMap<String, Object> editComment(@RequestBody HashMap<String, Object> payload){
      HashMap<String, Object> finalMap = new HashMap<>();
      return finalMap;
    }


    @ApiOperation(value = "", nickname = "addNewBlog")
    @RequestMapping(value="/add_new_blog", method=RequestMethod.POST, produces="application/json")
    public HashMap<String, Object> addNewBlog(@RequestBody HashMap<String, Object> payload){
      HashMap<String, Object> finalMap = new HashMap<>();
      return finalMap;
    }


    @ApiOperation(value = "", nickname = "editBlog")
    @RequestMapping(value="/edit_blog", method=RequestMethod.POST, produces="application/json")
    public HashMap<String, Object> editBlog(@RequestBody HashMap<String, Object> payload){
      HashMap<String, Object> finalMap = new HashMap<>();
      return finalMap;
    }


    @ApiOperation(value = "", nickname = "deleteBlog")
    @RequestMapping(value="/delete_blog", method=RequestMethod.POST, produces="application/json")
    public HashMap<String, Object> deleteBlog(@RequestBody HashMap<String, Object> payload){
      HashMap<String, Object> finalMap = new HashMap<>();
      return finalMap;
    }


    @ApiOperation(value = "", nickname = "likeABlog")
    @RequestMapping(value="/like_a_blog", method=RequestMethod.POST, produces="application/json")
    public HashMap<String, Object> likeABlog(@RequestBody HashMap<String, Object> payload){
      HashMap<String, Object> finalMap = new HashMap<>();
      return finalMap;
    }


    @ApiOperation(value = "", nickname = "unlikeABlog")
    @RequestMapping(value="/unlike_a_blog", method=RequestMethod.POST, produces="application/json")
    public HashMap<String, Object> unlikeABlog(@RequestBody HashMap<String, Object> payload){
      HashMap<String, Object> finalMap = new HashMap<>();
      return finalMap;
    }


    @ApiOperation(value = "", nickname = "likeAComment")
    @RequestMapping(value="/like_a_comment", method=RequestMethod.POST, produces="application/json")
    public HashMap<String, Object> likeAComment(@RequestBody HashMap<String, Object> payload){
      HashMap<String, Object> finalMap = new HashMap<>();
      return finalMap;
    }


    @ApiOperation(value = "", nickname = "unlikeAComment")
    @RequestMapping(value="/unlike_a_comment", method=RequestMethod.POST, produces="application/json")
    public HashMap<String, Object> unlikeAComment(@RequestBody HashMap<String, Object> payload){
      HashMap<String, Object> finalMap = new HashMap<>();
      return finalMap;
    }


    @ApiOperation(value = "", nickname = "deleteAComment")
    @RequestMapping(value="/delete_a_comment", method=RequestMethod.POST, produces="application/json")
    public HashMap<String, Object> deleteAComment(@RequestBody HashMap<String, Object> payload){
      HashMap<String, Object> finalMap = new HashMap<>();
      return finalMap;
    }


    public static void main(String[] args) {
        SpringApplication.run(App.class, args);
    }
}
